// <auto-generated />
using System;
using CocktailApp.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CocktailApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200902160616_NullableForeignKeys")]
    partial class NullableForeignKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CocktailApp.Repository.Entities.BittersEntity", b =>
                {
                    b.Property<int>("BittersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Abv")
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BittersId");

                    b.ToTable("Bitters");
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.CocktailBittersEntity", b =>
                {
                    b.Property<int>("CocktailId")
                        .HasColumnType("int");

                    b.Property<int>("BittersId")
                        .HasColumnType("int");

                    b.HasKey("CocktailId", "BittersId");

                    b.HasIndex("BittersId");

                    b.ToTable("CocktailBitters");
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.CocktailEntity", b =>
                {
                    b.Property<int>("CocktailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FortifiedWineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginYear")
                        .HasColumnType("decimal(4,0)");

                    b.Property<string>("Recipe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpiritId")
                        .HasColumnType("int");

                    b.HasKey("CocktailId");

                    b.HasIndex("FortifiedWineId");

                    b.HasIndex("SpiritId");

                    b.ToTable("Cocktails");
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.FortifiedWineEntity", b =>
                {
                    b.Property<int>("FortifiedWineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Abv")
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FortifiedWineId");

                    b.ToTable("FortifiedWines");
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.SpiritEntity", b =>
                {
                    b.Property<int>("SpiritId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Abv")
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOverproof")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpiritId");

                    b.ToTable("Spirits");
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.CocktailBittersEntity", b =>
                {
                    b.HasOne("CocktailApp.Repository.Entities.BittersEntity", "Bitters")
                        .WithMany("CocktailBitters")
                        .HasForeignKey("BittersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailApp.Repository.Entities.CocktailEntity", "Cocktail")
                        .WithMany("CocktailBitters")
                        .HasForeignKey("CocktailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CocktailApp.Repository.Entities.CocktailEntity", b =>
                {
                    b.HasOne("CocktailApp.Repository.Entities.FortifiedWineEntity", "FortifiedWine")
                        .WithMany()
                        .HasForeignKey("FortifiedWineId");

                    b.HasOne("CocktailApp.Repository.Entities.SpiritEntity", "Spirit")
                        .WithMany()
                        .HasForeignKey("SpiritId");
                });
#pragma warning restore 612, 618
        }
    }
}
